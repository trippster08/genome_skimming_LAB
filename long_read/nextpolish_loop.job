#!/bin/sh
# ----------------Parameters---------------------- #
#$ -S /bin/sh
#$ -pe mthread 4
#$ -q sThC.q
#$ -l mres=8G,h_data=2G,h_vmem=32G
#$ -cwd
#$ -j y
#$ -N null
#$ -o null
#
# ----------------Modules------------------------- #
module load module-verbose
module load tools/mamba
start-mamba
source activate nextpolish 
# ----------------Your Commands------------------- #
#
echo + `date` job $JOB_NAME started in $QUEUE with jobID=$JOB_ID on $HOSTNAME
echo + NSLOTS = $NSLOTS
#

name="$1"
results="$2"
trimmed_illumina_reads="$3"
medaka_corrected_assemblies="$4"
#
# Create .fofn file
echo ${trimmed_illumina_reads}/${name}_R1_PE_trimmed.fastq.gz > ${results}/nextpolish/${name}.fofn
echo ${trimmed_illumina_reads}/${name}_R2_PE_trimmed.fastq.gz >> ${results}/nextpolish/${name}.fofn
# Create run.cfg file
cat > "${results}/nextpolish/${name}_run.cfg" <<EOF
[General]
job_type = local
job_prefix = nextPolish
task = best
rewrite = yes
rerun = 3
parallel_jobs = 6
multithread_jobs = 5
genome = ${medaka_corrected_assemblies}/${name}_medaka_consensus.fasta #genome file
genome_size = auto
workdir = ${results}/nextpolish/${name}
polish_options = -p {multithread_jobs} -u -debug

[sgs_option]
sgs_fofn = ${results}/nextpolish/${name}.fofn
sgs_options = -max_depth 100 -bwa
EOF
#
nextPolish \
${results}/nextpolish/${name}_run.cfg

#
cp ${results}/../../jobs/logs/${name}_nextpolish_hydra.log \
${results}/nextpolished_assemblies/${name}_nextpolish_hydra.log

if [ -f ${results}/nextpolish/${name}/genome.nextpolish.fasta ]; then
  cp ${results}/nextpolish/${name}/genome.nextpolish.fasta \
  ${results}/nextpolished_assemblies/${name}_nextpolished.fasta
  cp ${results}/nextpolish/${name}/genome.nextpolish.fasta.stat \
  ${results}/nextpolished_assemblies/${name}_genome_nextpolish_fasta.stat
fi

echo = `date` job $JOB_NAME done

# This job file loads the conda module, activates the nanoplot
# environment, and runs nanoplot on all samples.
# -o is the path to the output directory